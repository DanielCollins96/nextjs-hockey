{"version":3,"file":"../pages/players.js","mappings":"qmBAIA,OAAMA,UAAiBC,IACnB,aAAaC,gBAAgBC,CAAG,CAAE,CAE9B,MAAO,CADiDA,GAAnC,MAAMF,IAAAA,eAA4B,CAACE,EAChD,CACZ,CAEAC,QAAS,CACL,MACIC,CAAAA,EAAAA,EAAAA,IAAAA,EAACC,EAAAA,IAAAA,CAAAA,CAAKC,KAAK,eACPC,CAAAA,EAAAA,EAAAA,GAAAA,EAACC,EAAAA,IAAAA,CAAAA,CACGC,SAAAF,CAAAA,EAAAA,EAAAA,GAAAA,EAACG,OAAAA,CAAKC,IAAI,OAAOC,MAAM,QAAQC,KAAK,6BAIxCT,CAAAA,EAAAA,EAAAA,IAAAA,EAACU,OAAAA,CAAKC,UAAU,wBACZR,CAAAA,EAAAA,EAAAA,GAAAA,EAACS,EAAAA,IAAAA,CAAAA,CAAAA,GACDT,CAAAA,EAAAA,EAAAA,GAAAA,EAACU,EAAAA,UAAAA,CAAAA,CAAAA,QAIjB,CACJ,iDCVA,IAAMC,EAAgBC,EAAiBA,EAAeC,OAAO,CAAGC,KAAAA,EAE1DC,EAAsBJ,EAAgBA,EAAcjB,eAAe,CAAGoB,KAAAA,EACtEE,EAAqBJ,EAAiBA,EAAeK,cAAc,CAAGH,KAAAA,EACtEI,EAAyBN,EAAiBA,EAAeO,kBAAkB,CAAGL,KAAAA,EAc9EM,EAAyBC,OANQC,MAAM,CAAC,CAC5C,QAASC,EAAAC,gCAAuC,CAChD,aAAcD,EAAAE,qCAA4C,CAC1D,UAAWF,EAAAG,kCAAyC,EAGA,CAAC,aAAa,EAAIH,EAAAI,6BAAoC,CAExGhB,GAAiB,mBAAOI,GAC1BJ,CAAAA,EAAcjB,eAAe,CAAG0B,EAAuBL,EAAmB,EAGvE,IAACE,EACJ,mBAAOD,EACHO,EAAAK,4BAAmC,CAACZ,EAAoB,cACxDF,KAAAA,EACAK,EACJ,mBAAOD,EACHK,EAAAM,gCAAuC,CAACX,EAAwB,cAChEJ,KAAAA,EAEAgB,EAAsBnB,EAAgBY,EAAAQ,2BAAkC,CAACpB,GAAkBA,8MCiC1F,eAAeM,IAClB,GAAI,CAEA,MAAO,CACHe,MAAO,CACHC,QAASC,MAHIC,CAAAA,EAAAA,EAAAA,EAAAA,KAGM,IACvB,CACJ,CACJ,CAAE,MAAOC,EAAO,CAEZ,OADAC,QAAQC,GAAG,CAAC,sDACL,CACHN,MAAO,CACHC,QAAS,IACb,EACAM,WAAY,EAChB,CACJ,CACJ,yEA5Fe,SAAiB,CAACN,QAAAA,CAAO,CAAC,EAErC,GAAM,CAACO,EAAiBC,EAAmB,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,EAAE,EACnDC,EAAUC,CAAAA,EAAAA,EAAAA,OAAAA,EACZ,IAAM,CACD,CACIC,OAAQ,KACRC,YAAa,aACbC,KAAM,CAAC,CAACC,IAAAA,CAAG,CAAC,GAAKhD,CAAAA,EAAAA,EAAAA,GAAAA,EAACiD,MAAAA,UAAKD,EAAIE,QAAQ,CAACC,UAAAA,EACxC,EACa,CACTN,OAAQ,OACRO,WAAY,GAAOC,CAAC,CAAC,YAAY,CAEjCN,KAAM,CAAC,CAACC,IAAAA,CAAG,CAAC,GAAKhD,CAAAA,EAAAA,EAAAA,GAAAA,EAACsD,IAAAA,CACdhD,KAAM,CAAC,OAAO,EAAE0C,EAAIE,QAAQ,CAAC,UAAU,CAAC,CAAC,CACzCK,SAAQ,GACR/C,UAAU,wDAAgDwC,EAAIE,QAAQ,CAAC,cAC/E,EACA,CACIL,OAAQ,OACRC,YAAa,WAClBC,KAAM,CAAC,CAACC,IAAAA,CAAG,CAAC,GAAMhD,CAAAA,EAAAA,EAAAA,GAAAA,EAACsD,IAAAA,CACfhD,KAAM,CAAC,SAAS,EAAE0C,EAAIE,QAAQ,CAACM,EAAE,CAAC,CAAC,CACnCD,SAAQ,GACR/C,UAAU,wDAAgDwC,EAAIE,QAAQ,CAACO,QAAAA,EAC1E,EACM,CACXZ,OAAQ,OACRO,WAAY,GAAOC,CAAC,CAAC,yBAEjB,CACKR,OAAQ,KACRO,WAAY,GAAOC,CAAC,CAAC,aAAa,CAClCN,KAAMf,GAAShC,CAAAA,EAAAA,EAAAA,GAAAA,EAAC0D,IAAAA,CAAElD,UAAU,aAAcwB,SAAAA,EAAM2B,QAAQ,IAQ5D,EACM,CACXd,OAAQ,IACRO,WAAY,GAAOC,CAAC,CAAC,aAAa,CAIlCN,KAAMf,GAAShC,CAAAA,EAAAA,EAAAA,GAAAA,EAAC0D,IAAAA,CAAElD,UAAU,aAAcwB,SAAAA,EAAM2B,QAAQ,IAC5D,EACD,CACKd,OAAQ,IACRO,WAAY,GAAOC,CAAC,CAAC,eAAe,CAIpCN,KAAMf,GAAShC,CAAAA,EAAAA,EAAAA,GAAAA,EAAC0D,IAAAA,CAAElD,UAAU,aAAcwB,SAAAA,EAAM2B,QAAQ,IAC5D,EACE,CACEd,OAAQ,IACRO,WAAY,GAAOC,CAAC,CAAC,cAAc,CAInCN,KAAMf,GAAShC,CAAAA,EAAAA,EAAAA,GAAAA,EAAC0D,IAAAA,CAAElD,UAAU,aAAcwB,SAAAA,EAAM2B,QAAQ,IAC5D,EACK,EACL,MACI3D,CAAAA,EAAAA,EAAAA,GAAAA,EAACiD,MAAAA,CACIhB,SAAAA,EAAUjC,CAAAA,EAAAA,EAAAA,GAAAA,EAAC4D,EAAAA,CAAAA,CAAAA,CAAWjB,QAASA,EAASkB,KAAM5B,EAAS6B,QAAQ,MAAQ9D,CAAAA,EAAAA,EAAAA,GAAAA,EAAC+D,KAAAA,CAAG7D,SAAA,+BAGxF,qBDhEA,IAAMS,EAAgBC,EAAiBA,EAAeC,OAAO,CAAGC,KAAAA,EAE1DC,EAAsBJ,EAAgBA,EAAcjB,eAAe,CAAGoB,KAAAA,EACtEE,EAAqBJ,EAAiBA,EAAeK,cAAc,CAAGH,KAAAA,EACtEI,EAAyBN,EAAiBA,EAAeO,kBAAkB,CAAGL,KAAAA,EAc9EM,EAAyBC,OANQC,MAAM,CAAC,CAC5C,QAAS0C,EAAAxC,gCAAuC,CAChD,aAAcwC,EAAAvC,qCAA4C,CAC1D,UAAWuC,EAAAtC,kCAAyC,EAGA,CAAC,WAAW,EAAIsC,EAAArC,6BAAoC,CAEtGhB,GAAiB,mBAAOI,GAC1BJ,CAAAA,EAAcjB,eAAe,CAAG0B,EAAuBL,EAAmB,EAGvE,IAACE,EACJ,mBAAOD,EACHgD,EAAApC,4BAAmC,CAACZ,EAAoB,YACxDF,KAAAA,EACAK,EACJ,mBAAOD,EACH8C,EAAAnC,gCAAuC,CAACX,EAAwB,YAChEJ,KAAAA,EAEAgB,EAAsBnB,EAAgBqD,EAAAjC,2BAAkC,CAACpB,GAAkBA,qCEtCjGsD,OAAAC,cAAA,CAAAC,EAAA,IAAwC,CACxCC,WAAA,GACAC,IAAA,WACA,OAGA,SAAAC,EAAAC,CAAA,CAAAC,CAAA,SAEA,KAAAD,EACAA,CAAA,CAAAC,EAAA,CAIA,SAAAD,GAAA,mBAAAA,EAAAE,IAAA,CACAF,EAAAE,IAAA,IAAAH,EAAAI,EAAAF,IAIA,mBAAAD,GAAAC,YAAAA,EACAD,QAIA,CAnBA,CACA,ucCNA,IAAAI,EAAe,GAAAC,EAAAC,CAAA,EAAMC,EAAQ,WAEtB7D,EAAuB,GAAA2D,EAAAC,CAAA,EAAMC,EAAQ,kBACrCC,EAAuB,GAAAH,EAAAC,CAAA,EAAMC,EAAQ,kBACrC3D,EAA2B,GAAAyD,EAAAC,CAAA,EAAMC,EAAQ,sBACzCE,EAAe,GAAAJ,EAAAC,CAAA,EAAMC,EAAQ,UAC7BG,EAAwB,GAAAL,EAAAC,CAAA,EAAMC,EAAQ,mBAEtCI,EAAgC,GAAAN,EAAAC,CAAA,EAAMC,EAAQ,2BAC9CK,EAAgC,GAAAP,EAAAC,CAAA,EAAMC,EAAQ,2BAC9CM,EAAiC,GAAAR,EAAAC,CAAA,EAAMC,EAAQ,4BAC/CO,EAAgC,GAAAT,EAAAC,CAAA,EAAMC,EAAQ,2BAC9CQ,EAAoC,GAAAV,EAAAC,CAAA,EAAMC,EAAQ,+BAElDS,EAAA,IAAwBC,EAAAC,gBAAgB,EAC/CC,WAAA,CACAC,KAAcC,EAAAC,CAAS,CAAAC,KAAA,CACvBC,KAAA,WACAC,SAAA,WAEAC,WAAA,GACAC,SAAA,EACA,EACAC,WAAA,CACAC,IAAWC,EAAA,QACX7G,SAAgB8G,EAAA,SAEhBC,SAAYzB,CACZ,yECrCe,SAAS0B,EAAO,CAC7BC,OAAAA,CAAM,CACNC,MAAAA,CAAK,CACN,EACC,IAAMC,EAAaD,EAChBE,sBAAsB,GACtBC,QAAQ,CAAC,EAAE,EAAElD,SAAS8C,EAAOjD,EAAE,EAE5BsD,EAAoBL,EAAOM,cAAc,GAE/C,MAAO,iBAAOJ,EACZ,GAAAK,EAAAC,IAAA,EAAChE,MAAAA,CAAIzC,UAAU,2BACbwG,EAAAE,GAAA,CAACC,QAAAA,CACCC,KAAK,SACLC,MAAOP,GAAmB,CAAC,EAAE,EAAI,GACjCQ,SAAUC,GACRd,EAAOe,cAAc,CAAC,GAAS,CAC7BD,EAAEE,MAAM,CAACJ,KAAK,CACdK,GAAK,CAAC,EAAE,CACT,EAEHC,YAAa,MACbnH,UAAU,+BAEZwG,EAAAE,GAAA,CAACC,QAAAA,CACCC,KAAK,SACLC,MAAOP,GAAqB,CAAC,EAAE,EAAI,GACnCQ,SAAUC,GACRd,EAAOe,cAAc,CAAC,GAAS,CAC7BE,GAAK,CAAC,EAAE,CACRH,EAAEE,MAAM,CAACJ,KAAK,CACf,EAEHM,YAAa,MACbnH,UAAU,kCAIdwG,EAAAE,GAAA,CAACC,QAAAA,CACCC,KAAK,OACLC,MAAQP,GAAqB,GAC7BQ,SAAUC,GAAKd,EAAOe,cAAc,CAACD,EAAEE,MAAM,CAACJ,KAAK,EACnDM,YAAa,YACbnH,UAAU,8BAGhB,oHC/Be,SAASoD,EAAW,CAACjB,QAAAA,CAAO,CAAEkB,KAAAA,CAAI,CAAEC,QAAAA,EAAU,QAAQ,CAAE8D,UAAAA,EAAU,CAAC,WAAW,CAAEC,SAAAA,EAAS,EAAE,CAAC,EAEzG,GAAM,CAACC,EAASC,EAAW,CAAGrF,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,CAAC,CAC9Bc,GAAIM,EACJkE,KAAM,EACR,EAAG,EAEH,CAACC,EAAYC,EAAc,CAAGxF,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,CACzCyF,UAAW,EACXN,SAAUA,CACd,GAEInB,EAAQ0B,CAAAA,EAAAA,EAAAA,aAAAA,EACZ,CACEzF,QAAAA,EACAkB,KAAAA,EACAwE,MAAO,CACPP,QAAAA,EACAG,WAAAA,CACA,EACAK,mBAAoBJ,EACpBK,gBAAiBR,EACjBS,gBAAiBA,CAAAA,EAAAA,EAAAA,eAAAA,IACjBC,kBAAmBA,CAAAA,EAAAA,EAAAA,iBAAAA,IACnBC,sBAAuBA,CAAAA,EAAAA,EAAAA,qBAAAA,IACvBC,oBAAqBA,CAAAA,EAAAA,EAAAA,mBAAAA,GACvB,GAGF,MAAQ,GAAA3B,EAAAC,IAAA,EAAAD,EAAA4B,QAAA,YACN,GAAA5B,EAAAC,IAAA,EAACP,QAAAA,CACClG,UAAU,iDAEbwG,EAAAE,GAAA,CAAC2B,QAAAA,UACOnC,EAAMoC,eAAe,GAAGC,GAAG,CAACC,GAC3BhC,EAAAE,GAAA,CAAC+B,KAAAA,UACED,EAAYE,OAAO,CAACH,GAAG,CAAClG,GAErB,GAAAmE,EAAAC,IAAA,EAACkC,KAAAA,CAAG3I,UAAU,GAAmB4I,QAASvG,EAAOuG,OAAO,WACrDvG,EAAOwG,aAAa,CAAG,KACtB,GAAArC,EAAAC,IAAA,EAAChE,MAAAA,CAEGzC,UAAWqC,EAAO4D,MAAM,CAAC6C,UAAU,GAC/B,6BACA,GACJC,QAAS1G,EAAO4D,MAAM,CAAC+C,uBAAuB,aAG/CC,CAAAA,EAAAA,EAAAA,UAAAA,EACC5G,EAAO4D,MAAM,CAACiD,SAAS,CAAC7G,MAAM,CAC9BA,EAAO8G,UAAU,IAEnB3C,EAAAE,GAAA,CAAC0C,OAAAA,CAAKpJ,UAAU,mBACf,CACCqJ,IAAK,gBACL7B,KAAM,eACR,CAAC,CAACnF,EAAO4D,MAAM,CAACqD,WAAW,GAAG,EAAI,UAI3BlC,GAAaA,EAAUmC,QAAQ,CAAClH,EAAO4D,MAAM,CAACjD,EAAE,GACvDwD,EAAAE,GAAA,CAACjE,MAAAA,UACD+D,EAAAE,GAAA,CAACV,EAAAA,CAAMA,CAAAA,CAACC,OAAQ5D,EAAO4D,MAAM,CAAEC,MAAOA,QAxBtB7D,EAAOW,EAAE,IAH5BwF,EAAYxF,EAAE,KAoC7BwD,EAAAE,GAAA,CAAC8C,QAAAA,CAAMxJ,UAAU,YACdkG,EAAMuD,WAAW,GAAGC,IAAI,EAAEnB,IAAI,CAAC/F,EAAKmH,KAEnC,IAAMC,EAAQpH,GAAKE,QAAQ,CAAC,cAAc,EAAI,yBAC9C,OACE8D,EAAAE,GAAA,CAAC+B,KAAAA,CAAgBzI,UAAW4J,EAAQ,eAAiB,YAClDpH,EAAIqH,eAAe,GAAGtB,GAAG,CAAC,GAEvB/B,EAAAE,GAAA,CAACoD,KAAAA,CACC9J,UAAU,4CAGTiJ,EAAAA,UAAAA,CAAW1G,EAAK0D,MAAM,CAACiD,SAAS,CAAC3G,IAAI,CAAEA,EAAK4G,UAAU,KAFlD5G,EAAKS,EAAE,IALXR,EAAIQ,EAAE,CAanB,KAEFwD,EAAAE,GAAA,CAACqD,QAAAA,UACE7D,EAAM8D,eAAe,GAAGzB,GAAG,CAAC,CAAC0B,EAAaC,IACzC1D,EAAAE,GAAA,CAAC+B,KAAAA,CAECzI,UAAU,oDAETiK,EAAYvB,OAAO,CAACH,GAAG,CAAC,GACvB,GAAA/B,EAAAC,IAAA,EAACqD,KAAAA,CAEClB,QAASvG,EAAOuG,OAAO,CACvB5I,UAAU,8BAETqC,EAAOwG,aAAa,CACjB,KACAI,CAAAA,EAAAA,EAAAA,UAAAA,EACE5G,EAAO4D,MAAM,CAACiD,SAAS,CAACiB,MAAM,CAC9B9H,EAAO8G,UAAU,IAChB,MATF9G,EAAOW,EAAE,IALbiH,EAAYjH,EAAE,QAqB3B,GAAAwD,EAAAC,IAAA,EAAChE,MAAAA,CAAIzC,UAAU,oCACXwG,EAAAE,GAAA,CAAC0D,SAAAA,CACCpK,UAAU,kBACV+I,QAAS,IAAM7C,EAAMmE,YAAY,CAAC,GAClCC,SAAU,CAACpE,EAAMqE,kBAAkB,YAElC,OAEH/D,EAAAE,GAAA,CAAC0D,SAAAA,CACCpK,UAAU,kBACV+I,QAAS,IAAM7C,EAAMsE,YAAY,GACjCF,SAAU,CAACpE,EAAMqE,kBAAkB,YAElC,MAEH/D,EAAAE,GAAA,CAAC0D,SAAAA,CACCpK,UAAU,kBACV+I,QAAS,IAAM7C,EAAMuE,QAAQ,GAC7BH,SAAU,CAACpE,EAAMwE,cAAc,YAE9B,MAEHlE,EAAAE,GAAA,CAAC0D,SAAAA,CACCpK,UAAU,kBACV+I,QAAS,IAAM7C,EAAMmE,YAAY,CAACnE,EAAMyE,YAAY,GAAK,GACzDL,SAAU,CAACpE,EAAMwE,cAAc,YAE9B,OAEK,GAAAlE,EAAAC,IAAA,EAAC2C,OAAAA,CAAKpJ,UAAU,oCACtBwG,EAAAE,GAAA,CAACjE,MAAAA,UAAI,SACL,GAAA+D,EAAAC,IAAA,EAACmE,SAAAA,WACE1E,EAAM2E,QAAQ,GAAGpD,UAAU,CAACE,SAAS,CAAG,EAAE,MAAI,IAC9CzB,EAAMyE,YAAY,cAQ/B,oFCzKA,IAAMG,EAAO,GAAIC,WAAAA,IAAIA,CAAC,CACpBC,KAAMC,QAAQC,GAAG,CAACC,OAAO,CACzBC,SAAUH,QAAQC,GAAG,CAACG,OAAO,CAC7BC,KAAML,QAAQC,GAAG,CAACK,MAAM,CACxBC,KAAMP,QAAQC,GAAG,CAACO,OAAO,CACzBC,SAAUT,QAAQC,GAAG,CAACS,OAAO,CAE7BC,IAAK,GACLC,kBAAmB,IACnBC,wBAAyB,GAC3B,GAGAhB,EAAKiB,EAAE,CAAC,QAAS,CAACC,EAAKC,KACrBpK,QAAQD,KAAK,CAAC,kCAAmCoK,EACnD,GAGA,IAAA7H,EAAe2G,8IC+DR,eAAeoB,EAAelJ,CAAE,CAAEmJ,CAAQ,EAG/C,GAAI,CAmCF,IAAIC,EAAQ,CAAC,OAAO,EAAEjK,CAhCpBgK,WAAAA,EACI,CACE,WACA,gBACA,YACA,cACA,eACA,eACA,aACA,mBACA,gBACA,iBACD,CACD,CACE,WACA,gBACA,YACA,cACA,eACA,cACA,gBACA,eACA,wBACA,4BACA,kBACA,aACA,mBACA,gBACA,iBACD,EAGuBE,IAAI,CAAC,MAAM;;0CAEH,CAAC,CAIvC,MAAO3K,CADM,MAAMoJ,EAAAA,CAAIA,CAACsB,KAAK,CAACA,EAAO,CAACpJ,EAAG,GAC3B0G,IAAI,CAClB,MAAO9H,EAAO,CACdC,QAAQC,GAAG,CAACF,EACd,CACF,CAOO,eAAe0K,EAAUtJ,CAAE,EAChC,GAAI,CACF,IAAMuJ,EAAQ,CAAC;;;;;;;;;;;;;;;;;;QAkBX,CAAC,CACD7K,EAAS,MAAMoJ,EAAAA,CAAIA,CAACsB,KAAK,CAACG,EAAO,CAACvJ,EAAG,EAGzC,OAFAtB,EAASA,EAAOgI,IAAI,CAGpB,MAAO9H,EAAO,CACdC,QAAQC,GAAG,CAAC,CAAC0K,OAAQ5K,CAAK,EAC5B,CACF,CAiCO,eAAe6K,IACpB,GAAI,CACF,IAAMF,EAAQ,CAAC;;;;QAIX,CAAC,CACD7K,EAAS,MAAMoJ,EAAAA,CAAIA,CAACsB,KAAK,CAACG,GAG9B,OAFA7K,EAASA,EAAOgI,IAAI,CAGpB,MAAO9H,EAAO,CACdC,QAAQC,GAAG,CAAC,CAAC0K,OAAQ5K,CAAK,EAC5B,CACF,CAEO,eAAe8K,EAASC,CAAQ,EACrC,GAAI,CACF,IAAMC,EAAM,CAAC;;;;;;;;;;;;;;;;;;;;IAoBb,CAAC,CACGlL,EAAS,MAAMoJ,EAAAA,CAAIA,CAACsB,KAAK,CAACQ,EAAK,CAACD,EAAS,EAE7C,OADAjL,EAASA,EAAOgI,IAAI,CAEpB,MAAO9H,EAAO,CAEd,MADAC,QAAQC,GAAG,CAAC,CAAC0K,OAAQ5K,CAAK,GACpBA,CACR,CACF,CAEO,eAAeiL,IACpB,GAAI,CACF,IAAMD,EAAM,CAAC;;;;QAIT,CAAC,CACDlL,EAAS,MAAMoJ,EAAAA,CAAIA,CAACsB,KAAK,CAACQ,GAE9B,OADAlL,EAASA,EAAOgI,IAAI,CAEpB,MAAO9H,EAAO,CACdC,QAAQC,GAAG,CAAC,CAAC0K,OAAQ5K,CAAK,EAC5B,CAIF,CAEO,eAAekL,IACpB,GAAI,CACF,IAAMF,EAAM,CAAC;;;QAGT,CAAC,CACDlL,EAAS,MAAMoJ,EAAAA,CAAIA,CAACsB,KAAK,CAACQ,GAE9B,OADAlL,EAASA,EAAOgI,IAAI,CAEpB,MAAO9H,EAAO,CACdC,QAAQC,GAAG,CAAC,CAAC0K,OAAQ5K,CAAK,EAC5B,CACF,CAEO,eAAemL,EAAe/J,CAAE,EACrC,GAAI,CACF,IAAM4J,EAAM,CAAC;;;;;;;;QAQT,CAAC,CACDlL,EAAS,MAAMoJ,EAAAA,CAAIA,CAACsB,KAAK,CAACQ,EAAK,CAAC5J,EAAG,EAEvC,OADAtB,EAASA,EAAOgI,IAAI,CAEpB,MAAO9H,EAAO,CACdC,QAAQC,GAAG,CAAC,CAAC0K,OAAQ5K,CAAK,EAC5B,CACF,CAEO,eAAeoL,EAAehK,CAAE,EACrC,GAAI,CACF,IAAM4J,EAAM,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA8CT,CAAC,CACDlL,EAAS,MAAMoJ,EAAAA,CAAIA,CAACsB,KAAK,CAACQ,EAAK,CAAC5J,EAAG,EAEvC,OADAtB,EAASA,EAAOgI,IAAI,CAEpB,MAAO9H,EAAO,CACdC,QAAQC,GAAG,CAACF,EACd,CACF,CACO,eAAeqL,EAAejK,CAAE,EACrC,GAAI,CACF,IAAM4J,EAAM,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAwDT,CAAC,CACDlL,EAAS,MAAMoJ,EAAAA,CAAIA,CAACsB,KAAK,CAACQ,EAAK,CAAC5J,EAAG,EAEvC,OADAtB,EAASA,EAAOgI,IAAI,CAEpB,MAAO9H,EAAO,CAEdC,QAAQC,GAAG,CAAC,CAAC0K,OAAQ5K,CAAK,EAC5B,CACF,CAEO,eAAesL,EAAgBC,CAAY,EAChD,GAAI,CACF,IAAMP,EAAM,CAAC;;;;;QAKT,CAAC,CACDlL,EAAS,MAAMoJ,EAAAA,CAAIA,CAACsB,KAAK,CAACQ,EAAK,CAACO,EAAa,EAEjD,OADAzL,EAASA,EAAOgI,IAAI,CAACnB,GAAG,CAAC,GAAS/F,EAAI4K,MAAM,CAE9C,CAAE,MAAOxL,EAAO,CACdC,QAAQC,GAAG,CAAC,CAAC0K,OAAQ5K,CAAK,EAC5B,CACF,CAEO,eAAeD,EAAwByL,EAAS,QAAQ,EAC7D,GAAI,CACF,IAAMR,EAAM,CAAC;;;;;;;;;QAST,CAAC,CACDlL,EAAS,MAAMoJ,EAAAA,CAAIA,CAACsB,KAAK,CAACQ,EAAK,CAACQ,EAAO,EAE3C,OADA1L,EAASA,EAAOgI,IAAI,CAEpB,MAAO9H,EAAO,CACdC,QAAQC,GAAG,CAAC,CAAC0K,OAAQ5K,CAAK,EAC5B,CACF,qBC9bAyL,EANA5J,OAAAC,cAAA,CAAAC,EAAA,IAA4C,CAC5CC,WAAA,GACAC,IAAA,WACA,OAAAwJ,CACA,CACA,GAEA,SAAAA,CAAA,EAGAA,EAAA,cAGAA,EAAA,sBAIAA,EAAA,oBAIAA,EAAA,qBACA,EAACA,GAAAA,CAAAA,EAAA,gBC1BDtJ,EAAAJ,OAAA,CAAA2J,QAAA,6BCAAvJ,EAAAJ,OAAA,CAAA2J,QAAA,0BCAAvJ,EAAAJ,OAAA,CAAA2J,QAAA,mECAAvJ,EAAAJ,OAAA,CAAA2J,QAAA,wBCAAvJ,EAAAJ,OAAA,CAAA2J,QAAA,iBCAAvJ,EAAAJ,OAAA,CAAA2J,QAAA,oBCAAvJ,EAAAJ,OAAA,CAAA2J,QAAA,wBCAAvJ,EAAAJ,OAAA,CAAA2J,QAAA,0BCAAvJ,EAAAJ,OAAA,CAAA2J,QAAA,mCCAAvJ,EAAAJ,OAAA,CAAA2J,QAAA,oCCAAvJ,EAAAJ,OAAA,CAAA2J,QAAA,gCCAAvJ,EAAAJ,OAAA,CAAA2J,QAAA,mBCAAvJ,EAAAJ,OAAA,4CCAAI,EAAAJ,OAAA","sources":["webpack://hockey/pages/_document.js","webpack://hockey/sentry-wrapper-module","webpack://hockey/pages/players/index.js","webpack://hockey/./node_modules/next/dist/build/templates/helpers.js","webpack://hockey/?4579","webpack://hockey/./components/Filter.js","webpack://hockey/./components/PaginatedTable.jsx","webpack://hockey/./lib/db.js","webpack://hockey/./lib/queries.js","webpack://hockey/./node_modules/next/dist/server/future/route-kind.js","webpack://hockey/external commonjs \"@sentry/nextjs\"","webpack://hockey/external commonjs \"aws-amplify\"","webpack://hockey/external commonjs \"next/dist/compiled/next-server/pages.runtime.prod.js\"","webpack://hockey/external commonjs \"next/head\"","webpack://hockey/external commonjs \"pg\"","webpack://hockey/external commonjs \"react\"","webpack://hockey/external commonjs \"react-dom\"","webpack://hockey/external commonjs \"react-query\"","webpack://hockey/external commonjs \"react-query/devtools\"","webpack://hockey/external commonjs \"react-query/hydration\"","webpack://hockey/external commonjs \"react/jsx-runtime\"","webpack://hockey/external commonjs2 \"path\"","webpack://hockey/external module \"@tanstack/react-table\"","webpack://hockey/external module \"react-hot-toast\""],"sourcesContent":["import React from 'react';\nimport NextDocument, {Html, Head, Main, NextScript} from 'next/document';\nimport Script from 'next/script'\n\nclass Document extends NextDocument {\n    static async getInitialProps(ctx) {\n        const initialProps = await NextDocument.getInitialProps(ctx);\n        return {...initialProps};\n    }\n\n    render() {\n        return (\n            <Html lang=\"en\">\n                <Head>\n                    <link rel=\"icon\" sizes=\"96x96\" href=\"/images/Hockey-Net.svg\" />\n                    {/* <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-2056923001767627\"\n     crossOrigin=\"anonymous\"></script> */}\n                </Head>\n                <body className=\"bg-gray-100\">\n                    <Main />\n                    <NextScript />\n                </body>\n            </Html>\n        );\n    }\n}\n\nexport default Document;","import * as serverComponentModule from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport * from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nimport * as Sentry from '@sentry/nextjs';\n\n/*\n * This file is a template for the code which will be substituted when our webpack loader handles non-API files in the\n * `pages/` directory.\n *\n * We use `__SENTRY_WRAPPING_TARGET_FILE__.cjs` as a placeholder for the path to the file being wrapped. Because it's not a real package,\n * this causes both TS and ESLint to complain, hence the pragma comments below.\n */\n\n\nconst userPageModule = serverComponentModule ;\n\nconst pageComponent = userPageModule ? userPageModule.default : undefined;\n\nconst origGetInitialProps = pageComponent ? pageComponent.getInitialProps : undefined;\nconst origGetStaticProps = userPageModule ? userPageModule.getStaticProps : undefined;\nconst origGetServerSideProps = userPageModule ? userPageModule.getServerSideProps : undefined;\n\n// Rollup will aggressively tree-shake what it perceives to be unused properties\n// on objects. Because the key that's used to index into this object (/_document)\n// is replaced during bundling, Rollup can't see that these properties are in fact\n// used. Using `Object.freeze` signals to Rollup that it should not tree-shake\n// this object.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst getInitialPropsWrappers = Object.freeze({\n  '/_app': Sentry.wrapAppGetInitialPropsWithSentry,\n  '/_document': Sentry.wrapDocumentGetInitialPropsWithSentry,\n  '/_error': Sentry.wrapErrorGetInitialPropsWithSentry,\n});\n\nconst getInitialPropsWrapper = getInitialPropsWrappers['/_document'] || Sentry.wrapGetInitialPropsWithSentry;\n\nif (pageComponent && typeof origGetInitialProps === 'function') {\n  pageComponent.getInitialProps = getInitialPropsWrapper(origGetInitialProps) ;\n}\n\nconst getStaticProps =\n  typeof origGetStaticProps === 'function'\n    ? Sentry.wrapGetStaticPropsWithSentry(origGetStaticProps, '/_document')\n    : undefined;\nconst getServerSideProps =\n  typeof origGetServerSideProps === 'function'\n    ? Sentry.wrapGetServerSidePropsWithSentry(origGetServerSideProps, '/_document')\n    : undefined;\n\nconst pageWrapperTemplate = pageComponent ? Sentry.wrapPageComponentWithSentry(pageComponent ) : pageComponent;\n\nexport { pageWrapperTemplate as default, getServerSideProps, getStaticProps };\n","import { useState, useMemo } from 'react'\nimport Link from 'next/link';\nimport { getPointLeadersBySeason } from '../../lib/queries';\n\nimport ReactTable from '../../components/PaginatedTable';\n\nexport default function Players({players}) {\n    // Write a query with useQuery to fetch from api/players\n    const [filteredPlayers, setFilteredPlayers] = useState([]);\n    const columns = useMemo(\n        () => [\n             {\n                 header: 'Rk',\n                 accessorKey: 'row_number',\n                 cell: ({row}) => <div>{row.original.row_number}</div>\n             },\n                          {\n                 header: 'Team',\n                 accessorFn: (d) => d['team.name'],\n                //  cell: (props) => props.getValue(),\n                 cell: ({row}) =>(<Link\n                     href={`/teams/${row.original['team.id']}`}\n                     passHref\n                     className=\" hover:text-blue-700 visited:text-purple-800\">{row.original['team.name']}</Link>)\n             },\n             {\n                 header: 'Name',\n                 accessorKey: 'fullName',\n            cell: ({row}) => (<Link\n                href={`/players/${row.original.id}`}\n                passHref\n                className=\" hover:text-blue-700 visited:text-purple-800\">{row.original.fullName}</Link>)\n             },\n                   {\n        header: \"Pos.\",\n        accessorFn: (d) => d[\"primaryPosition.code\"],\n      },\n            {\n                 header: 'GP',\n                 accessorFn: (d) => d[\"stat.games\"],\n                 cell: props => <p className=\"text-right\">{props.getValue()}</p>,\n                //  footer: ({ table }) => {\n                //    const filteredRows = table.getFilteredRowModel().rows?.filter((row) => \n                //         row.getValue('GP') !== null && row.getValue('League')?.includes('NHL')\n                //     );\n\n                //     return filteredRows.reduce((total, row) => total + row.getValue('GP'), 0)\n                // },    \n             },\n                   {\n        header: 'G',\n        accessorFn: (d) => d[\"stat.goals\"],\n        // footer: ({ table }) => table.getFilteredRowModel().rows?.filter((row) => \n        //                 row.getValue('GP') !== null && row.getValue('League')?.includes('NHL')\n        //             ).reduce((total, row) => total + row.getValue('G'), 0),\n        cell: props => <p className=\"text-right\">{props.getValue()}</p>\n    },\n   {\n        header: 'A',\n        accessorFn: (d) => d[\"stat.assists\"],\n        // footer: ({ table }) => table.getFilteredRowModel().rows?.filter((row) => \n        //                 row.getValue('GP') !== null && row.getValue('League')?.includes('NHL')\n        //             ).reduce((total, row) => total + row.getValue('A'), 0),\n        cell: props => <p className=\"text-right\">{props.getValue()}</p>\n    },\n      {\n        header: 'P',\n        accessorFn: (d) => d[\"stat.points\"],\n        // footer: ({ table }) => table.getFilteredRowModel().rows?.filter((row) => \n        //                 row.getValue('GP') !== null && row.getValue('League')?.includes('NHL')\n        //             ).reduce((total, row) => total + row.getValue('P'), 0),\n        cell: props => <p className=\"text-right\">{props.getValue()}</p>\n    },\n        ])\n    return (\n        <div>\n            {players ? <ReactTable columns={columns} data={players} sortKey='P'/> : <h3>Error Retrieving Stats...</h3>} \n        </div>\n    )\n}\n\nexport async function getStaticProps() {\n    try {\n        const result = await getPointLeadersBySeason()\n        return {\n            props: {\n                players: result || null\n            }\n        }\n    } catch (error) {\n        console.log('Database connection failed, returning null players')\n        return {\n            props: {\n                players: null\n            },\n            revalidate: 60, // Try again in 1 minute\n        }\n    }\n}","/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */ \"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"hoist\", {\n    enumerable: true,\n    get: function() {\n        return hoist;\n    }\n});\nfunction hoist(module, name) {\n    // If the name is available in the module, return it.\n    if (name in module) {\n        return module[name];\n    }\n    // If a property called `then` exists, assume it's a promise and\n    // return a promise that resolves to the name.\n    if (\"then\" in module && typeof module.then === \"function\") {\n        return module.then((mod)=>hoist(mod, name));\n    }\n    // If we're trying to hoise the default export, and the module is a function,\n    // return the module itself.\n    if (typeof module === \"function\" && name === \"default\") {\n        return module;\n    }\n    // Otherwise, return undefined.\n    return undefined;\n}\n\n//# sourceMappingURL=helpers.js.map","import { PagesRouteModule } from \"next/dist/server/future/route-modules/pages/module.compiled\";\nimport { RouteKind } from \"next/dist/server/future/route-kind\";\nimport { hoist } from \"next/dist/build/templates/helpers\";\n// Import the app and document modules.\nimport Document from \"private-next-pages/_document.js\";\nimport App from \"private-next-pages/_app.js\";\n// Import the userland code.\nimport * as userland from \"private-next-pages/players/index.js\";\n// Re-export the component (should be the default export).\nexport default hoist(userland, \"default\");\n// Re-export methods.\nexport const getStaticProps = hoist(userland, \"getStaticProps\");\nexport const getStaticPaths = hoist(userland, \"getStaticPaths\");\nexport const getServerSideProps = hoist(userland, \"getServerSideProps\");\nexport const config = hoist(userland, \"config\");\nexport const reportWebVitals = hoist(userland, \"reportWebVitals\");\n// Re-export legacy methods.\nexport const unstable_getStaticProps = hoist(userland, \"unstable_getStaticProps\");\nexport const unstable_getStaticPaths = hoist(userland, \"unstable_getStaticPaths\");\nexport const unstable_getStaticParams = hoist(userland, \"unstable_getStaticParams\");\nexport const unstable_getServerProps = hoist(userland, \"unstable_getServerProps\");\nexport const unstable_getServerSideProps = hoist(userland, \"unstable_getServerSideProps\");\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesRouteModule({\n    definition: {\n        kind: RouteKind.PAGES,\n        page: \"/players\",\n        pathname: \"/players\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    components: {\n        App,\n        Document\n    },\n    userland\n});\n\n//# sourceMappingURL=pages.js.map","export default function Filter({\n  column,\n  table,\n}) {\n  const firstValue = table\n    .getPreFilteredRowModel()\n    .flatRows[0]?.getValue(column.id)\n\n  const columnFilterValue = column.getFilterValue()\n\n  return typeof firstValue === 'number' ? (\n    <div className=\"flex space-x-2\">\n      <input\n        type=\"number\"\n        value={columnFilterValue?.[0] ?? ''}\n        onChange={e =>\n          column.setFilterValue((old) => [\n            e.target.value,\n            old?.[1],\n          ])\n        }\n        placeholder={`Min`}\n        className=\"w-24 border shadow rounded\"\n      />\n      <input\n        type=\"number\"\n        value={(columnFilterValue)?.[1] ?? ''}\n        onChange={e =>\n          column.setFilterValue((old) => [\n            old?.[0],\n            e.target.value,\n          ])\n        }\n        placeholder={`Max`}\n        className=\"w-24 border shadow rounded\"\n      />\n    </div>\n  ) : (\n    <input\n      type=\"text\"\n      value={(columnFilterValue ?? '')}\n      onChange={e => column.setFilterValue(e.target.value)}\n      placeholder={`Search...`}\n      className=\"w-36 border shadow rounded\"\n    />\n  )\n}","// import {useTable, useSortBy, useFilters} from \"react-table\";\nimport {\n  useReactTable,\n  flexRender,\n  getRowModel,\n  getCoreRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  SortingState,\n  getFilteredRowModel\n\n} from \"@tanstack/react-table\";\nimport { useState } from \"react\";\nimport Filter from \"./Filter\";\n\nexport default function ReactTable({columns, data, sortKey = \"season\", filterCol=['fullName'], pageSize=25}) {\n\n  const [sorting, setSorting] = useState([{\n            id: sortKey,\n            desc: true,\n          },]);\n\n    const [pagination, setPagination] = useState({\n        pageIndex: 0,\n        pageSize: pageSize,\n    })\n\n  const table = useReactTable(\n    {\n      columns,\n      data,\n      state: {\n      sorting,\n      pagination,\n      },\n      onPaginationChange: setPagination,\n      onSortingChange: setSorting,\n      getCoreRowModel: getCoreRowModel(),\n      getSortedRowModel: getSortedRowModel(),\n      getPaginationRowModel: getPaginationRowModel(),\n      getFilteredRowModel: getFilteredRowModel(),\n    }\n  );\n\n  return (<>\n    <table\n      className=\"border border-black p-2 m-1 max-w-xl\"\n    >\n   <thead>\n          {table.getHeaderGroups().map(headerGroup => (\n            <tr key={headerGroup.id}>\n              {headerGroup.headers.map(header => {\n                return (\n                  <th className=\"\" key={header.id} colSpan={header.colSpan}>\n                    {header.isPlaceholder ? null : (\n                      <div\n                        {...{\n                          className: header.column.getCanSort()\n                            ? 'cursor-pointer select-none'\n                            : '',\n                          onClick: header.column.getToggleSortingHandler(),\n                        }}\n                      >\n                        {flexRender(\n                          header.column.columnDef.header,\n                          header.getContext()\n                        )}\n                        <span className=\"text-sm\">\n                        {{\n                          asc: ' 🔼',\n                          desc: ' 🔽',\n                        }[header.column.getIsSorted()] ?? null}\n                        </span>\n                      </div>\n                    )}\n                              {filterCol && filterCol.includes(header.column.id) && (\n                        <div>\n                        <Filter column={header.column} table={table} />\n                        </div>\n                              )}\n                  </th>\n                )\n              })}\n            </tr>\n          ))}\n        </thead>\n      <tbody className=\"\">\n        {table.getRowModel().rows?.map((row, i) => {\n\n          const isNHL = row?.original['league.name'] == 'National Hockey League'\n          return (\n            <tr key={row.id} className={isNHL ? \"bg-slate-200\" : \"\"}>\n              {row.getVisibleCells().map((cell) => {\n                return (\n                  <td\n                    className=\"border-black border px-1 text-sm\"\n                    key={cell.id}\n                  >\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n      <tfoot>\n        {table.getFooterGroups().map((footerGroup, idx) => (\n          <tr\n            key={footerGroup.id}\n            className=\"bg-slate-300 py-px text-center font-bold\"\n          >\n            {footerGroup.headers.map((header) => (\n              <td\n                key={header.id}\n                colSpan={header.colSpan}\n                className=\"border-black px-1\"\n              >\n                {header.isPlaceholder\n                  ? null\n                  : flexRender(\n                      header.column.columnDef.footer,\n                      header.getContext()\n                    )}{\" \"}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tfoot>\n    </table>\n    <div className=\"flex items-center gap-2\">\n        <button\n          className=\"border rounded \"\n          onClick={() => table.setPageIndex(0)}\n          disabled={!table.getCanPreviousPage()}\n        >\n          {'<<'}\n        </button>\n        <button\n          className=\"border rounded \"\n          onClick={() => table.previousPage()}\n          disabled={!table.getCanPreviousPage()}\n        >\n          {'<'}\n        </button>\n        <button\n          className=\"border rounded \"\n          onClick={() => table.nextPage()}\n          disabled={!table.getCanNextPage()}\n        >\n          {'>'}\n        </button>\n        <button\n          className=\"border rounded \"\n          onClick={() => table.setPageIndex(table.getPageCount() - 1)}\n          disabled={!table.getCanNextPage()}\n        >\n          {'>>'}\n        </button>\n                <span className=\"flex items-center gap-1\">\n          <div>Page</div>\n          <strong>\n            {table.getState().pagination.pageIndex + 1} of{' '}\n            {table.getPageCount()}\n          </strong>\n        </span>\n              {/* <div>{table.getRowModel().rows.length} Rows</div> */}\n\n        </div>\n        </>\n  );\n}\n","import {Pool} from \"pg\";\n\nconst pool = new Pool({\n  user: process.env.DB_USER,\n  password: process.env.DB_PASS,\n  host: process.env.DB_URL,\n  port: process.env.DB_PORT, // Changed from PORT which might conflict with Next.js\n  database: process.env.DB_NAME,\n  // Add some connection management settings\n  max: 30, // maximum number of clients in pool\n  idleTimeoutMillis: 30000,\n  connectionTimeoutMillis: 8000,\n});\n\n// Add error handling\npool.on(\"error\", (err, client) => {\n  console.error(\"Unexpected error on idle client\", err);\n});\n\n// Export the pool directly\nexport default pool;\n","import pool from \"./db.js\";\n\n/**\n * Represents a player in the roster.\n * @typedef {Object} RosterPlayer\n * @property {number} id - The player's ID.\n * @property {string} fullName - The player's full name.\n * @property {string} primaryPosition - The player's primary position.\n * @property {string} seasonId - The season ID.\n * @property {string} teamName - The team name.\n * @property {string} season - The season.\n * @property {number} games - The number of games played.\n * @property {number} goals - The number of goals scored.\n * @property {number} assists - The number of assists.\n * @property {number} points - The total points.\n * @property {number} pim - Penalty minutes.\n * @property {number} plusMinus - The plus/minus rating.\n * Add more properties as needed.\n */\n\n/**\n * Get the roster for a team by ID.\n * @param {number} id - The team's ID.\n * @returns {Promise<RosterPlayer[]>} A promise that resolves to an array of RosterPlayer objects.\n */\nexport async function getRoster(id) {\n  try {\n    const stats = `\n        SELECT p.\"fullName\", p.id, p.\"primaryPosition.code\", f.\"seasonId\", ps.\"team.name\",ps.season, p.\"fullName\",\n        ps.\"stat.games\",ps.\"stat.goals\",ps.\"stat.assists\",ps.\"stat.points\", ps.\"stat.pim\", ps.\"stat.plusMinus\"\n        FROM staging1.team t\n        inner JOIN staging1.franchise f\n        ON t.id = f.\"teamId\"\n        AND \"gameTypeId\" = 2\n        INNER JOIN staging1.player_stats ps\n        ON f.\"seasonId\" = ps.\"season\"\n        AND f.\"teamId\" = ps.\"team.id\"\n        LEFT JOIN staging1.player p\n        ON p.id = ps.\"person.id\"\n        WHERE t.id = $1\n        AND p.id is not null\n        ORDER BY \"seasonId\" desc\n        -- LIMIT 1\n        `;\n\n    // console.log('rosters api getRoster');\n\n    let result = await pool.query(stats, [id]);\n    result = result.rows;\n\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n/**\n * Represents a player's statistics for a season.\n * @typedef {Object} PlayerSeasonStats\n * @property {string} season - The season in the format \"YYYY-YY\".\n * @property {string} leagueName - The name of the league.\n * @property {number} teamId - The ID of the team.\n * @property {string} teamName - The name of the team.\n * @property {number} games - The number of games played.\n * @property {number} wins - The number of games won.\n * @property {number} losses - The number of games lost.\n * @property {number} goals - The number of goals scored.\n * @property {number} savePercentage - The save percentage.\n * @property {number} goalAgainstAverage - The goal against average.\n * @property {number} shutouts - The number of shutouts.\n * @property {number} pim - Penalty minutes.\n * @property {number} plusMinus - The plus/minus rating.\n * @property {number} points - The total points.\n * @property {number} assists - The number of assists.\n * Add more properties as needed.\n */\n\n/**\n * Get a player's statistics by their ID.\n * @param {number} id - The player's ID.\n * @param {string} position - The player's position.\n * @returns {Promise<PlayerSeasonStats[]>} A promise that resolves to an array of PlayerSeasonStats objects.\n */\nexport async function getPlayerStats(id, position) {\n  // write a function that queries the player stats database for all stats from the player id\n  // and returns the stats in an array\n  try {\n    // Define the columns to select based on position\n    const columns =\n      position !== \"Goalie\"\n        ? [\n            '\"season\"',\n            '\"league.name\"',\n            '\"team.id\"',\n            '\"team.name\"',\n            '\"stat.games\"',\n            '\"stat.goals\"',\n            '\"stat.pim\"',\n            '\"stat.plusMinus\"',\n            '\"stat.points\"',\n            '\"stat.assists\"',\n          ]\n        : [\n            '\"season\"',\n            '\"league.name\"',\n            '\"team.id\"',\n            '\"team.name\"',\n            '\"stat.games\"',\n            '\"stat.wins\"',\n            '\"stat.losses\"',\n            '\"stat.goals\"',\n            '\"stat.savePercentage\"',\n            '\"stat.goalAgainstAverage\"',\n            '\"stat.shutouts\"',\n            '\"stat.pim\"',\n            '\"stat.plusMinus\"',\n            '\"stat.points\"',\n            '\"stat.assists\"',\n          ];\n\n    // Build the base query\n    let query = `SELECT ${columns.join(\", \")}\n                 FROM staging1.player_stats_new ps\n                 WHERE ps.\"person.id\" = $1`;\n\n    // Run the query\n    let result = await pool.query(query, [id]);\n    return result.rows;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n/**\n * Get a player by ID.\n * @param {number} id - The player's ID.\n * @returns {Promise<Player|null>} A promise that resolves to a Player object or null if not found.\n */\nexport async function getPlayer(id) {\n  try {\n    const stats = `\n        SELECT p.id,\"fullName\",p.\"birthDate\",p.\"birthCountry\"\n\t\t\t ,p.\"primaryPosition.name\"\n\t\t\t ,p.\"primaryNumber\"\n\t\t\t ,p.\"currentAge\"\n\t\t\t ,ARRAY_AGG(d.\"draftYear\") AS draft_seasons,ARRAY_AGG(d.\"overallPickNumber\") AS draft_position\n        FROM staging1.player p\n        LEFT JOIN staging1.drafts d \n        ON d.\"playerId\" = p.id\n        WHERE p.id = $1\n        GROUP BY\n            p.id,\n            p.\"fullName\",\n            p.\"birthDate\",\n            p.\"birthCountry\",\n            p.\"primaryPosition.name\",\n            p.\"primaryNumber\",\n            p.\"currentAge\";\n        `;\n    let result = await pool.query(stats, [id]);\n    result = result.rows;\n    // console.log({resultTst: result});\n    return result;\n  } catch (error) {\n    console.log({tst_er: error});\n  }\n}\n\n/**\n * Get all active player IDs.\n * @returns {Promise<number[]>} A promise that resolves to an array of player IDs.\n */\nexport async function getAllPlayerIds() {\n  try {\n    const stats = `\n        SELECT DISTINCT id\n        FROM staging1.player p\n        WHERE active = true\n        LIMIT 150\n        `;\n\n    let result = await pool.query(stats);\n    result = result.rows;\n\n    return result;\n  } catch (error) {\n    console.log({tst_er: error});\n  }\n}\n\n/**\n * Represents a draft year.\n * @typedef {string} DraftYear\n */\n\n/**\n * Get all distinct draft years.\n * @returns {Promise<DraftYear[]>} A promise that resolves to an array of distinct draft years.\n */\nexport async function getAllDraftYears() {\n  try {\n    const stats = `\n        SELECT DISTINCT \"draftYear\"\n        FROM staging1.drafts\n        ORDER BY \"draftYear\" desc\n        `;\n    let result = await pool.query(stats);\n    result = result.rows;\n\n    return result;\n  } catch (error) {\n    console.log({tst_er: error});\n  }\n}\n\nexport async function getDraft(seasonId) {\n  try {\n    const sql = `\n    select \"playerId\",\"overallPickNumber\",\"pickInRound\",\"roundNumber\",\"playerName\",\"position\",\"amateurLeague\",\"amateurClubName\",\"triCode\",\"birthPlace\",\"draftedByTeamId\"\n    , SUM(\"stat.games\") as games\n    , SUM(ps.\"stat.goals\") as goals\n    , SUM(ps.\"stat.assists\") as assists\n    , SUM(\"stat.points\") as points\n    , SUM(\"stat.pim\") as pim\n    ,CASE\n        WHEN MAX(\"season\") IS NOT NULL THEN\n        CONCAT(SUBSTRING(CAST(MAX(\"season\") AS text), 1, 4), '-', SUBSTRING(CAST(MAX(\"season\") AS text), 5))\n        ELSE\n        CAST(MAX(\"season\") AS text)\n    END AS last_season\n    -- ,*\n    from staging1.drafts d\n    LEFT JOIN staging1.player_stats ps ON d.\"playerId\" = ps.\"person.id\" AND \"league.id\" = 133\n    WHERE \"draftYear\" = $1\n    GROUP BY \"playerId\",\"overallPickNumber\",\"pickInRound\",\"roundNumber\",\"playerName\",\"position\",\"amateurLeague\",\"amateurClubName\",\"triCode\",\"birthPlace\",\"draftedByTeamId\"\n    ORDER BY \"overallPickNumber\" \n\n    `;\n    let result = await pool.query(sql, [seasonId]);\n    result = result.rows;\n    return result;\n  } catch (error) {\n    console.log({tst_er: error});\n    throw error;\n  }\n}\n\nexport async function getTeams() {\n  try {\n    const sql = `\n        SELECT abbreviation, name, id\n        FROM staging1.team\n        ORDER BY name;\n        `;\n    let result = await pool.query(sql);\n    result = result.rows;\n    return result;\n  } catch (error) {\n    console.log({tst_er: error});\n  }\n  // finally {\n  //     client.release()\n  // }\n}\n\nexport async function getTeamIds() {\n  try {\n    const sql = `\n        SELECT id\n        FROM staging1.team\n        `;\n    let result = await pool.query(sql);\n    result = result.rows;\n    return result;\n  } catch (error) {\n    console.log({tst_er: error});\n  }\n}\n\nexport async function getTeamSeasons(id) {\n  try {\n    const sql = `\n        SELECT \"seasonId\", \"wins\", \"losses\", \"points\"\n        ,\"goalsAgainstPerGame\",\"goalsForPerGame\", \"regulationAndOtWins\" as \"row\"\n        , \"pointPct\", \"winsInShootout\"\n        FROM Staging1.team_season\n        WHERE \"teamId\" = $1\n        ORDER BY \"seasonId\" desc \n        LIMIT 8\n        `;\n    let result = await pool.query(sql, [id]);\n    result = result.rows;\n    return result;\n  } catch (error) {\n    console.log({tst_er: error});\n  }\n}\n\nexport async function getTeamSkaters(id) {\n  try {\n    const sql = `\nWITH combined_data AS (\n  SELECT \n    t.id, \n    sk.\"playerId\", \n    sk.season, \n    sk.\"triCode\",\n    CONCAT(sk.\"firstName\", ' ', sk.\"lastName\") AS \"fullName\",\n    SUM(CASE WHEN sk.\"gameType\" = 2 THEN sk.\"gamesPlayed\" ELSE 0 END) AS \"gamesPlayed\",\n    SUM(CASE WHEN sk.\"gameType\" = 3 THEN sk.\"gamesPlayed\" ELSE 0 END) AS \"playoffGamesPlayed\",\n    SUM(CASE WHEN sk.\"gameType\" = 2 THEN sk.\"goals\" ELSE 0 END) AS \"goals\",\n    SUM(CASE WHEN sk.\"gameType\" = 3 THEN sk.\"goals\" ELSE 0 END) AS \"playoffGoals\",\n    SUM(CASE WHEN sk.\"gameType\" = 2 THEN sk.\"assists\" ELSE 0 END) AS \"assists\",\n    SUM(CASE WHEN sk.\"gameType\" = 3 THEN sk.\"assists\" ELSE 0 END) AS \"playoffAssists\",\n    SUM(CASE WHEN sk.\"gameType\" = 2 THEN sk.\"points\" ELSE 0 END) AS \"points\",\n    SUM(CASE WHEN sk.\"gameType\" = 3 THEN sk.\"points\" ELSE 0 END) AS \"playoffPoints\",\n    SUM(CASE WHEN sk.\"gameType\" = 2 THEN sk.\"penaltyMinutes\" ELSE 0 END) AS \"penaltyMinutes\",\n    SUM(CASE WHEN sk.\"gameType\" = 3 THEN sk.\"penaltyMinutes\" ELSE 0 END) AS \"playoffPenaltyMinutes\",\n    SUM(CASE WHEN sk.\"gameType\" = 2 THEN sk.\"plusMinus\" ELSE 0 END) AS \"plusMinus\",\n    SUM(CASE WHEN sk.\"gameType\" = 3 THEN sk.\"plusMinus\" ELSE 0 END) AS \"playoffPlusMinus\",\n    sk.\"positionCode\"\n  FROM newapi.skaters sk\n  JOIN newapi.team t ON sk.\"triCode\" = t.\"triCode\"\n  WHERE t.id = $1\n  GROUP BY t.id, sk.\"playerId\", sk.season, sk.\"triCode\", sk.\"firstName\", sk.\"lastName\", sk.\"positionCode\"\n)\nSELECT DISTINCT \n  id, \n  \"playerId\", \n  season, \n  \"triCode\", \n  \"fullName\", \n  \"gamesPlayed\", \n  \"playoffGamesPlayed\",\n  \"goals\", \n  \"playoffGoals\",\n  \"assists\", \n  \"playoffAssists\",\n  \"points\",\n  \"playoffPoints\",\n  \"penaltyMinutes\", \n  \"playoffPenaltyMinutes\",\n  \"plusMinus\", \n  \"playoffPlusMinus\",\n  \"positionCode\"\nFROM combined_data;\n        `;\n    let result = await pool.query(sql, [id]);\n    result = result.rows;\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getTeamGoalies(id) {\n  try {\n    const sql = `\n    WITH combined_goalie_data AS (\n  SELECT \n    t.id, \n    g.\"playerId\", \n    g.season, \n    g.\"team\", \n    CONCAT(g.\"firstName\", ' ', g.\"lastName\") AS \"fullName\",\n    SUM(CASE WHEN g.\"gameType\" = 2 THEN g.\"gamesPlayed\" ELSE 0 END) AS \"gamesPlayed\",\n    SUM(CASE WHEN g.\"gameType\" = 3 THEN g.\"gamesPlayed\" ELSE 0 END) AS \"playoffGamesPlayed\",\n    SUM(CASE WHEN g.\"gameType\" = 2 THEN g.\"goals\" ELSE 0 END) AS \"goals\",\n    SUM(CASE WHEN g.\"gameType\" = 3 THEN g.\"goals\" ELSE 0 END) AS \"playoffGoals\",\n    SUM(CASE WHEN g.\"gameType\" = 2 THEN g.\"assists\" ELSE 0 END) AS \"assists\",\n    SUM(CASE WHEN g.\"gameType\" = 3 THEN g.\"assists\" ELSE 0 END) AS \"playoffAssists\",\n    SUM(CASE WHEN g.\"gameType\" = 2 THEN g.\"points\" ELSE 0 END) AS \"points\",\n    SUM(CASE WHEN g.\"gameType\" = 3 THEN g.\"points\" ELSE 0 END) AS \"playoffPoints\",\n    SUM(CASE WHEN g.\"gameType\" = 2 THEN g.\"wins\" ELSE 0 END) AS \"wins\",\n    SUM(CASE WHEN g.\"gameType\" = 3 THEN g.\"wins\" ELSE 0 END) AS \"playoffWins\",\n    SUM(CASE WHEN g.\"gameType\" = 2 THEN g.\"losses\" ELSE 0 END) AS \"losses\",\n    SUM(CASE WHEN g.\"gameType\" = 3 THEN g.\"losses\" ELSE 0 END) AS \"playoffLosses\",\n    AVG(CASE WHEN g.\"gameType\" = 2 THEN g.\"goalsAgainstAverage\" END) AS \"goalsAgainstAverage\",\n    AVG(CASE WHEN g.\"gameType\" = 3 THEN g.\"goalsAgainstAverage\" END) AS \"playoffGoalsAgainstAverage\",\n    AVG(CASE WHEN g.\"gameType\" = 2 THEN g.\"savePercentage\" END) AS \"savePercentage\",\n    AVG(CASE WHEN g.\"gameType\" = 3 THEN g.\"savePercentage\" END) AS \"playoffSavePercentage\",\n    SUM(CASE WHEN g.\"gameType\" = 2 THEN g.\"penaltyMinutes\" ELSE 0 END) AS \"penaltyMinutes\",\n    SUM(CASE WHEN g.\"gameType\" = 3 THEN g.\"penaltyMinutes\" ELSE 0 END) AS \"playoffPenaltyMinutes\"\n  FROM newapi.goalies g\n  JOIN newapi.team t ON g.\"team\" = t.\"triCode\"\n  WHERE t.id = $1\n  GROUP BY t.id, g.\"playerId\", g.season, g.team, g.\"firstName\", g.\"lastName\"\n)\nSELECT DISTINCT \n  id, \n  \"playerId\", \n  season, \n  \"team\", \n  \"fullName\", \n  \"gamesPlayed\", \n  \"playoffGamesPlayed\",\n  \"goals\", \n  \"playoffGoals\",\n  \"assists\", \n  \"playoffAssists\",\n  \"points\",\n  \"playoffPoints\",\n  \"wins\", \n  \"playoffWins\",\n  \"losses\", \n  \"playoffLosses\",\n  \"goalsAgainstAverage\", \n  \"playoffGoalsAgainstAverage\",\n  \"savePercentage\", \n  \"playoffSavePercentage\",\n  \"penaltyMinutes\", \n  \"playoffPenaltyMinutes\"\nFROM combined_goalie_data;\n        `;\n    let result = await pool.query(sql, [id]);\n    result = result.rows;\n    return result;\n  } catch (error) {\n    // return a error code\n    console.log({tst_er: error});\n  }\n}\n\nexport async function getPlayoffYears(abbreviation) {\n  try {\n    const sql = `\n        SELECT season\n        FROM staging1.\"team.gametypes\"\n        WHERE 3 = ANY(\"gameTypes\")\n        AND abbreviation = $1\n        `;\n    let result = await pool.query(sql, [abbreviation]);\n    result = result.rows.map((row) => row.season);\n    return result;\n  } catch (error) {\n    console.log({tst_er: error});\n  }\n}\n\nexport async function getPointLeadersBySeason(season = 20222023) {\n  try {\n    const sql = `\n        SELECT     ROW_NUMBER() OVER (ORDER BY ps.\"stat.points\" DESC NULLS LAST, ps.\"stat.goals\" DESC NULLS LAST) AS row_number,\n        p.\"fullName\", p.id, p.\"primaryPosition.code\", ps.\"season\", ps.\"team.name\", ps.\"stat.goals\", ps.\"stat.games\",ps.\"stat.assists\", ps.\"stat.points\", ps.\"team.id\"\n        FROM staging1.player_stats_new ps\n        INNER JOIN staging1.player p\n        ON p.id = ps.\"person.id\" AND ps.season = $1\n        WHERE ps.\"league.id\" = 133\n        ORDER BY ps.\"stat.points\" DESC NULLS LAST,ps.\"stat.goals\" DESC NULLS LAST\n        LIMIT 200\n        `;\n    let result = await pool.query(sql, [season]);\n    result = result.rows;\n    return result;\n  } catch (error) {\n    console.log({tst_er: error});\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"RouteKind\", {\n    enumerable: true,\n    get: function() {\n        return RouteKind;\n    }\n});\nvar RouteKind;\n(function(RouteKind) {\n    /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */ RouteKind[\"PAGES\"] = \"PAGES\";\n    /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */ RouteKind[\"PAGES_API\"] = \"PAGES_API\";\n    /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */ RouteKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */ RouteKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n})(RouteKind || (RouteKind = {}));\n\n//# sourceMappingURL=route-kind.js.map","module.exports = require(\"@sentry/nextjs\");","module.exports = require(\"aws-amplify\");","module.exports = require(\"next/dist/compiled/next-server/pages.runtime.prod.js\");","module.exports = require(\"next/head\");","module.exports = require(\"pg\");","module.exports = require(\"react\");","module.exports = require(\"react-dom\");","module.exports = require(\"react-query\");","module.exports = require(\"react-query/devtools\");","module.exports = require(\"react-query/hydration\");","module.exports = require(\"react/jsx-runtime\");","module.exports = require(\"path\");","module.exports = import(\"@tanstack/react-table\");;","module.exports = import(\"react-hot-toast\");;"],"names":["Document","NextDocument","getInitialProps","ctx","render","_jsxs","Html","lang","_jsx","Head","children","link","rel","sizes","href","body","className","Main","NextScript","pageComponent","userPageModule","default","undefined","origGetInitialProps","origGetStaticProps","getStaticProps","origGetServerSideProps","getServerSideProps","getInitialPropsWrapper","getInitialPropsWrappers","freeze","_sentry_nextjs__WEBPACK_IMPORTED_MODULE_4__","wrapAppGetInitialPropsWithSentry","wrapDocumentGetInitialPropsWithSentry","wrapErrorGetInitialPropsWithSentry","wrapGetInitialPropsWithSentry","wrapGetStaticPropsWithSentry","wrapGetServerSidePropsWithSentry","pageWrapperTemplate","wrapPageComponentWithSentry","props","players","result","getPointLeadersBySeason","error","console","log","revalidate","filteredPlayers","setFilteredPlayers","useState","columns","useMemo","header","accessorKey","cell","row","div","original","row_number","accessorFn","d","Link","passHref","id","fullName","p","getValue","ReactTable","data","sortKey","h3","_sentry_nextjs__WEBPACK_IMPORTED_MODULE_5__","Object","defineProperty","exports","enumerable","get","hoist","module","name","then","mod","__WEBPACK_DEFAULT_EXPORT__","next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__","l","private_next_pages_players_index_js__WEBPACK_IMPORTED_MODULE_5__","getStaticPaths","config","reportWebVitals","unstable_getStaticProps","unstable_getStaticPaths","unstable_getStaticParams","unstable_getServerProps","unstable_getServerSideProps","routeModule","next_dist_server_future_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__","PagesRouteModule","definition","kind","next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__","x","PAGES","page","pathname","bundlePath","filename","components","App","private_next_pages_app_js__WEBPACK_IMPORTED_MODULE_4__","private_next_pages_document_js__WEBPACK_IMPORTED_MODULE_3__","userland","Filter","column","table","firstValue","getPreFilteredRowModel","flatRows","columnFilterValue","getFilterValue","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","jsx","input","type","value","onChange","e","setFilterValue","target","old","placeholder","filterCol","pageSize","sorting","setSorting","desc","pagination","setPagination","pageIndex","useReactTable","state","onPaginationChange","onSortingChange","getCoreRowModel","getSortedRowModel","getPaginationRowModel","getFilteredRowModel","Fragment","thead","getHeaderGroups","map","headerGroup","tr","headers","th","colSpan","isPlaceholder","getCanSort","onClick","getToggleSortingHandler","flexRender","columnDef","getContext","span","asc","getIsSorted","includes","tbody","getRowModel","rows","i","isNHL","getVisibleCells","td","tfoot","getFooterGroups","footerGroup","idx","footer","button","setPageIndex","disabled","getCanPreviousPage","previousPage","nextPage","getCanNextPage","getPageCount","strong","getState","pool","Pool","user","process","env","DB_USER","password","DB_PASS","host","DB_URL","port","DB_PORT","database","DB_NAME","max","idleTimeoutMillis","connectionTimeoutMillis","on","err","client","getPlayerStats","position","query","join","getPlayer","stats","tst_er","getAllDraftYears","getDraft","seasonId","sql","getTeams","getTeamIds","getTeamSeasons","getTeamSkaters","getTeamGoalies","getPlayoffYears","abbreviation","season","RouteKind","require"],"sourceRoot":""}